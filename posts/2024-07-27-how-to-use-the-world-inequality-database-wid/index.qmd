---
title: "How to use the World Inequality Database (WID)?"
subtitle: "Accessing and utilizing data of the WID.world database."
description: ""
author: "Peter Baumgartner"
date: "2024-07-27"
image: "WID-Logo-min.png"
image-alt: "Logo of the World Inequality Lab"
categories: [inequality, research, WID, open-data]
date-modified: "2024-07-27"
draft: false
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false

base::source(file = "../../R/helper.R")
ggplot2::theme_set(ggplot2::theme_bw())
```

![Logo of the [World Inequality Lab](https://inequalitylab.world/)
(Screenshot). The WIL is a global research center studying inequality
and public policies promoting social, economic, and environmental
justice.](WID-Logo-min.png)

## Research on Social Inequality

I plan to write blog articles about social inequality in Austria, my
native country. To be innovative, I want to avoid repeating what other
people (journalists, scientists) were saying (claiming) but to
illustrate my thinking backed by original data. But where does the data
come from?

### Some Data Resources for Inequality Research

::: my-resource
::: my-resource-header
::: {#lem-inequality-data}
: Some Data Resources for Inequality Research
:::
:::

::: my-resource-container
-   **WID**: The [World Inequality
    Database](https://wid.world/wid-world/) (WID) aims to provide open
    and convenient access to the most extensive available database on
    the historical evolution of the world distribution of income and
    wealth, both within countries and between countries
    [@worldinequalitylab2024].
-   **OWID**: [Our World In Data](https://ourworldindata.org/) (OWID) is
    an online publication that focuses on large global problems such as
    poverty, disease, hunger, climate change, war, existential risks,
    and inequality [@globalchangedatalab2024].
-   **PIP**: The [Poverty and Inequality
    Platform](https://pip.worldbank.org/home) (PIP) is an interactive
    computational tool that offers users quick access to the World
    Bank's estimates of poverty, inequality, and shared prosperity. PIP
    provides a comprehensive view of global, regional, and country-level
    trends for more than 160 economies around the World
    [@worldbank2024].
-   **LIS**: The [Luxembourg Income Study
    Database](https://www.lisdatacenter.org/) (LIS) is a data archive
    and research center dedicated to cross-national analysis. It is home
    to the [Luxembourg Income Study
    Database](http://www.lisdatacenter.org/our-data/lis-database/) (LIS)
    and the [Luxembourg Wealth Study
    Database](http://www.lisdatacenter.org/our-data/lws-database/) (LWS)
    [@lisauthorcollective2024].
:::
:::

### WID & A Brief History of Equality

Understanding the use of all these data resources is a complex
enterprise. As a starting point, I will concentrate on the World
Inequality Database (`r glossary("WID")`) because there exist several
monographs where these data are used and interpreted.

As a first step, I am going to follow the arguments of one book that I
will use as `r glossary("advanced organizer")`. I am referring to "A
Brief History of Equality" (BHE), which is only 274 pages, is a kind of
executive summary of previous books by Thomas Piketty: "Capital in the
Twenty-First Century" (816 pages) and "Capital and Ideology" (1093
pages) [@piketty2020a; @piketty2017].

### Lacking Graphs about Austria

Most of the time, BHE uses global, regional, or data from big,
respectively 'important' countries like China, France, Germany, India,
United Kingdom, United States, etc. Data on Austria and its
interpretation are missing from the mentioned book and most scientific
publications [referenced on the
website](https://wid.world/methodology/#library-browse-by-country). An
exception is the working paper "Distributional National Accounts (DINA)"
for Austria, 2004-2016 by @jestl2020. But this paper partly uses
different indices and different concepts (for instance, the [Gini
coefficient](https://ourworldindata.org/what-is-the-gini-coefficient)).

On the `r glossary("WID")` website there are two other articles where at
least Austria is shown in some graphs: You will find five figures with
Austria data in "What's New About Income Inequality in Europe
(1980-2019)?" by @morgan2020 and other two figures in "How Unequal Is
Europe? Evidence from Distributional National Accounts, 1980-2017" by
@blanchet2019.

So, creating figures with Austrian data is not only an excellent
exercise but the result could also increase our knowledge about the
mechanisms and patterns of social inequality.

## Using the WID website

### Key resources

To get started effectively, one has to overcome a paradoxical situation:
The more detailed the methodological guidelines, the more difficult it
is to find an appropriate entry point to get started.

::: my-resource
::: my-resource-header
::: {#lem-inequality-methodology}
: Methodological Guidelines & Other Resources
:::
:::

::: my-resource-container
-   [Distributional National Accounts (DINA)
    Guidelines](https://wid.world/document/distributional-national-accounts-guidelines-2020-concepts-and-methods-used-in-the-world-inequality-database/):
    This is the central resource for understanding the methodology
    behind the decomposition of `r glossary("national accounts")` and
    the inequality series for income and wealth. The purpose of these
    Distributional National Accounts (DINA) guidelines is to present the
    concepts, data sources, and methods used in the World Inequality
    Database (`r glossary("WID")`). It is a long document with 186 pages
    [@blanchet2024b].
-   [Codes
    Dictionary](https://wid.world/codes-dictionary/ "Describes the general structure of the World Inequality Database (WID)")
    (Code Book): It describes the general structure of the World
    Inequality Database (WID). It explains how information is organized
    within it and how to retrieve and interpret its content. This
    document is invaluable for getting familiarized with the
    construction of WID variables and the structure of the database
    [@worldinequalitylab2024b]. Converting the web page into a PDF
    results in a document of 18 pages.
-   [Summary Table](https://wid.world/summary-table/): It summarizes all
    available WID.world data. The search tool can look for specific
    countries, variables, or WID.world codes. It has currently 6253 rows
    and 16 columns. The summary table is an efficient starting point
    because it allows for a view of available data, which one can then
    download for more detailed analysis.
-   [Computer Code](https://github.com/WIDworld/wid-world): On the
    GitHub platform, you can inspect and fork the repository that
    contains all the code used to create the entire database from both
    the researcher's data and official sources. It consists of 98% of
    STATA code, the rest (only 2%) is written in R. [^1]
-   **Data**: There are two ways to download data:
    -   **Direct Download**: The [interactive
        page](https://wid.world/data/) allows one to select the required
        data and download it in the format that best suits one's needs.
    -   **Advanced Interfaces**: For special requirements, one can
        access the data with
        [STATA](https://github.com/thomasblanchet/wid-stata-tool) or [R
        interfaces](https://github.com/thomasblanchet/wid-r-tool). In
        the case of the R interface, one can download from GitHub the R
        `{wid}` package [@wid-2].
:::
:::

[^1]: This is somewhat disappointing. As I do not know STATA, these code
    files do not make much sense to me. However, a quick internet search
    showed that there are some resources to learn how to translate STATA
    directives into R commands. Two examples: [Making the Transition? A
    Guide for Switching from Stata to
    R](https://www.hertiecodingclub.com/learn/rstudio/stata_to_r/) and
    [STATA to R cheat
    sheet](https://rstudio.github.io/cheatsheets/stata2r.pdf).

It is a lot of work to read all the necessary information before
starting. Instead of using this (tedious) sequential approach, I will
try an interactive procedure, iteratively changing between theory
(methodological guidelines) and practice (using R to replicate the
figure).

### Replicating income distribution

#### Figure to replicate

As my test bed, I will use Figure 7 of BHE [@piketty2022, pp. 46].

![Figure 7 of `r glossary("BHE")`, taken from the [original source on
Piketty's
website](http://piketty.pse.ens.fr/files/equality/).](BHE-Figure-07-Piketty-min.png){#fig-figure7-piketty
fig-alt="alt-text" fig-align="center"}

#### Interactive Replication

As a first approach, I will replicate Figure 7 of BHE with the provided
interactive tools of the WID. Here is a good [starting point for income
inequality](https://wid.world/country/france/).

![Choosing France as "Country" and using the default values for income
inequality (top 10% share and bottom 50%
share)](BHE-Figure-07-01-min.png){#fig-BHE-07-00 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

From here, I will show screenshots for every step necessary to replicate
Figure 7 of BHE, but here in this post, it is @fig-figure7-piketty. If
you click on one of the small images below, it will open the figure in
the bigger original size, and you can navigate back and forth between
the figures in the table below.

::: grid
::: g-col-4
##### Figures 3-6

![Choosing France as "Country" and using the default values for income
inequality (top 10% share and bottom 50%
share).](BHE-Figure-07-01-min.png){#fig-BHE-07-01 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

------------------------------------------------------------------------

![Enlarge the time span of the data from 1947 to 1820 with the bottom
slider.<br/> Â ](BHE-Figure-07-02-min.png){#fig-BHE-07-02
fig-alt="alt-text" fig-align="center" width="100%"
group="BHE-Figure-07"}

------------------------------------------------------------------------

![Hiding the extrapolations (dotted lines) by choosing 'More option' on
the top right corner and turning on the radio
button.](BHE-Figure-07-03-min.png){#fig-BHE-07-03 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

------------------------------------------------------------------------

![Check if 'smooth lines' is active. It should be turned on because it
is the default value. <br>Â ](BHE-Figure-07-04-min.png){#fig-BHE-07-04
fig-alt="alt-text" fig-align="center" width="100%"}
:::

::: g-col-4
##### Figures 7-10

![Change the limits of the Y-axis from 0 to 60%. This is different than
in the original. See my comments later in this
article.](BHE-Figure-07-05-min.png){#fig-BHE-07-05 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

------------------------------------------------------------------------

![Compared with the original, we still will need a third time series for
the share of the middle 40% of the
population.](BHE-Figure-07-06-min.png){#fig-BHE-07-06 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

------------------------------------------------------------------------

![Click on the bottom of the left green navigation bar to open 'More
Indicators' to include custom indicators in the
graph.](BHE-Figure-07-08-min.png){#fig-BHE-07-08 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

------------------------------------------------------------------------

![Choose 'Income Inequality' to get the option to include a
preconfigured percentile into the
graph.](BHE-Figure-07-09-min.png){#fig-BHE-07-09 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}
:::

::: g-col-4
##### Figures 11-14

![Scroll down to select the radio box for the 'Middle 40%'
percentile.<br />Â ](BHE-Figure-07-10-min.png){#fig-BHE-07-10
fig-alt="alt-text" fig-align="center" width="100%"
group="BHE-Figure-07"}

------------------------------------------------------------------------

![Confirm the default values. I will explain the different options in a
later post. <br />Â ](BHE-Figure-07-11-min.png){#fig-BHE-07-11
fig-alt="alt-text" fig-align="center" width="100%"
group="BHE-Figure-07"}

------------------------------------------------------------------------

![Our last action adds the share of the middle 40% to our graph, as was
seen in @fig-BHE-07-06.
<br />Â ](BHE-Figure-07-12-min.png){#fig-BHE-07-12 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}

------------------------------------------------------------------------

![Hovering with the mouse over the graphs of the interactive website, we
can get tooltips with the values for every
year.](BHE-Figure-07-13-min.png){#fig-BHE-07-13 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-Figure-07"}
:::
:::

#### Differences between original and replication

If we compare both figures side by side, we will see a significant
difference. Our replication differs from the original in the years
before 1900. For instance, in our figure, the people with the top 10% of
income share about 60% of the total income, in contrast to the 50% share
in the original graph. I need to find out where these differences come
from. There may have been a correction of the computed extrapolations in
an update after the book publication. In any case, this difference is
not essential here. Remember, the primary purpose of the exercise is to
understand the patterns of the database structure --- and not (at least
at the moment) to get correct figures.

::: grid
::: g-col-6
![Figure 7 of `r glossary("BHE")`, taken from the [original source on
Piketty's website](http://piketty.pse.ens.fr/files/equality/). The
shares for the top 10% are lower. It is slightly above 50% of the total
income, whereas it is about 60% in the replication. On the other hand,
the share of the middle is 40% lower than that of the
replication.](BHE-Figure-07-Piketty-min.png){#fig-figure7-piketty-2
fig-align="center" width="95%" group="BHE-figure-compare"}
:::

::: g-col-6
![The result of my replication is showing higher shares for the top 10%
and accordingly lower shares for the middle 40% in contrast to the
original figure. However, the level of the share of the bottom 50% of
the population is approximately the same in both
figures.](BHE-Figure-07-13-min.png){#fig-BHE-07-13-2 fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-figure-compare"}
:::
:::

There are other differences between the two pictures, but they are more
of cosmetically nature:

-   The choice of colors for the various time series is different.
-   The labels of the X- and Y-axes are different. The original is
    labeled every 20 years and contains a vertical line every 10 years,
    whereas the interactive replication has a 25-year grid. The Y-axis
    in the replication is missing the %-sign.
-   In the original, the time-series have different symbols in the data
    points (circle, triangle), which is vital in black & white (book)
    publications.
-   The legend is in the original at a prominent place in the middle of
    the graph, whereas it is in the interactive replication at the
    bottom.

### Display the results

Until now, I have used manually taken screenshots. But there are also
several possibilities to display results offered by the
`r glossary("WID")`.

#### Download a JPG-file

![Income inequality, France, 1820-2022 download as JPG from the
`r glossary("WID")` site and integrated into the Quarto
text.](BHE-Figure-07-graph_dl.jpg){#fig-wid-jpg-figure07
fig-alt="alt-text" fig-align="center" width="100%"}

Note that there are now fewer labels on the X- and Y-axis. The legend's
appearance has changed somewhat, and some information that is irrelevant
in a static view is removed.

#### Copy the URL

Another option is to copy the URL and integrate it as a link into the
Quarto text. It opens up a web page with the figure and all the WID
menus in your default browser. Others can explore the interactive graph
or create their own figure from here.

See the example: [Income inequality, France,
1820-2022](https://wid.world/share/#0/countrytimeseries/sptinc_p90p100_z;sptinc_p0p50_z;sptinc_p50p90_z/FR/2015/eu/k/p/yearly/s/false/-10/62/curve/true/1820/2022)

#### Embed as iframe

Another possibility is to embed the graph into an
`r glossary("iframe")`.

<iframe width="800" height="400" src="https://wid.world/share/#1/countrytimeseries/sptinc_p90p100_z;sptinc_p0p50_z;sptinc_p50p90_z/FR/2015/eu/k/p/yearly/s/true/9.4765/70/curve/true/1820/2022">

</iframe>

::: {#cau-wid-iframe-overlapping-legend .callout-caution style="color: darkgoldenrod;"}
##### Embedding WID iframes has some drawbacks

The legend overlaps the lower part of the graph. You have either to plan
during the construction of the graph to prevent this drawback or
(better) to adapt the code in the URL itself.

Besides, there is also an annoying cookies-consent message where the
link to 'learn more' is wrong by pointing to another graph and not to
the cookies policy.
:::

The code in the above iframe is:

```         
<iframe width="800" height="400" src="https://wid.world/share/#1/countrytimeseries/sptinc_p90p100_z;sptinc_p0p50_z;sptinc_p50p90_z/FR/2015/eu/k/p/yearly/s/true/9.4765/70/curve/true/1820/2022"></iframe>
```

It turned out that besides changing the delimiter for the axis from
`/9.4765/70/` to `/0/62/` it is also necessary to enlarge the iframe's
height to position the legend lower. With trial & error experimenting, I
got a good result after changing the height from `400` to `500`. Here is
the adapted iframe where you can see the full figure and also the slider
to change the time period of the data:

<iframe width="800" height="500" src="https://wid.world/share/#1/countrytimeseries/sptinc_p90p100_z;sptinc_p0p50_z;sptinc_p50p90_z/FR/2015/eu/k/p/yearly/s/true/0/62/curve/true/1820/2022">

</iframe>

## Getting codes for indicators

By far, the most important result of our replication is that the URL
contains the code for used indicators, areas, and percentiles.

```         
https://wid.world/share/#1/countrytimeseries/sptinc_p90p100_z;sptinc_p0p50_z;sptinc_p50p90_z/FR/2015/eu/k/p/yearly/s/false/9.4765/70/curve/true/1820/2022
```

This is very helpful because it is now much easier to find the code
explication in the [Code
Dictionary](https://wid.world/codes-dictionary/) or the [Summary
Table](https://wid.world/summary-table/). Let's analyze the example of
the `sptinc_p90p100_z` code:

-   **s**: The first letter `s` determines the code series. `s` means
    "share" and contains a fraction between 0 and 1.
-   **ptinc**: The next five letters are the code for the series
    concept. This is an essential help because a massive amount of
    five-letter codes exist. More than half of the 38 pages of the PDF
    version of the code dictionary lists five-letter codes and their
    meaning! Searching `ptinc` in the online Code Dictionary with the
    browser search tool results in "pretax national income".
-   **p90p100**: This one is easy. `p90p100` is the top 10%, the
    `r glossary("percentile", "percentiles")` characterizing people with
    an income equal to or higher than 90% of the population. Or
    **p0p50** is the bottom 50% etc.

Additionally, we have the information from the legend that the units are
adults, and the income is split equally between couples or other adult
members (= 20 years or older) of the household. Therefore, we can add:

-   **992**: The age code description has three numbers. `992` stands
    for a population of individuals over age 20.
-   **j**: The last letter is the unit description. `j` means
    equal-split adults.

With these data, we can now look for the corresponding codes in the
database and filter the database to get only the required information.
The variable name is, in our case:

$$
\begin{align*}
s + ptinc + 992 + j = sptinc992j
\end{align*}
$$ {#eq-wid-variable-calculation}

If we look for this complete code in the [Summary
Table](https://wid.world/summary-table/), we can read in the column
"Simple description of the variable" the following explanation:

> Pre-tax national income is the sum of all pre-tax personal income
> flows accruing to the owners of the production factors, labor and
> capital, before taking into account the operation of the tax/transfer
> system, but after taking into account the operation of pension system.
> The central difference between personal factor income and pre-tax
> income is the treatment of pensions, which are counted on a
> contribution basis by factor income and on a distribution basis by
> pre-tax income.

::: {#cau-ID .callout-caution style="color: darkgoldenrod;"}
##### Explaining just the procedure, not the concepts

Remember that I am not discussing the concepts behind the different
parameter codes. I just want to stress how to find the code for a
required indicator here. Which concepts to apply and what indicator is
appropriate for a specific research question will be covered in other
articles.
:::

## R Code

There is with {**wid**} a special R package for downloading data
directly from `r glossary("WID")` [@wid-3]. Read the instructions on the
[GitHub repo](https://github.com/thomasblanchet/wid-r-tool) to get
install information.

The R {wid} package should have a vignette with examples of its usage.
But unfortunately, all the links to it are broken or not available
except as [`.Rmd` file in the GitHub
repository](https://github.com/thomasblanchet/wid-r-tool/blob/master/vignettes/wid-demo.Rmd)
itself. I have downloaded and rendered the vignette as a PDF for your
convenience.

::: cell
```{=html}
<style type= "text/css">
.column {
text-align: center;
}
</style>
```
:::

::: columns
::: {.column width="100%"}
{{< downloadthis WID-vignette.pdf label="Download WID-vignette as PDF" dname = "WID-vignette" type=success >}}
:::
:::

### Plotting data with R

The central function of the {**wid**} package is `wid::download_wid()`.
It has the following parameters:

| Name                  | Type      | Default | Description                                                          |
|:----------------------|:----------|:--------|:---------------------------------------------------------------------|
| indicators            | character | all     | Codes corresponding to indicators to retrieve                        |
| areas                 | character | all     | Areas (mostly countries) for which to retrieve the indicators        |
| years                 | numeric   | all     | Years for which to retrieve the indicators                           |
| perc                  | character | all     | `r glossary("Percentile", "Percentiles")` (part of the distribution) |
| ages                  | numeric   | all     | Age groups (adults, all ages, elderly, etc.)                         |
| pop                   | character | all     | Population type (individual, households, tax units, etc.)            |
| metadata              | logical   | FALSE   | Fetch metadata too? (eg. sources, etc.)                              |
| verbose               | logical   | FALSE   | Display messages showing progress?                                   |
| include_extrapolation | logical   | TRUE    | Include data based on extrapolations / interpolations                |

: Description of the arguments for the \`wid::download_wid()\` function
{#tbl-wid-parameters}

::: my-example-header
::: {#exm-plotting-wid-data-with-r}
: R code for replicating Figure 7
:::
:::

::: panel-tabset
###### Download data

::: my-r-code
::: my-r-code-header
::: {#cnj-download-wid-data-fr}
: Download data with `wid::download_wid`
:::
:::

::: my-r-code-container
::: {#lst-download-wid-data-fr}
```{r}
#| label: download-wid-data-fr
#| cache: true
#| eval: false

income_france <- wid::download_wid(
    indicators = "sptinc", # Shares of pre-tax national income
    areas = "FR", # France
    perc = c("p0p50", "p50p90", "p90p100"), # Bottom 50%, middle 40% and top 10%
    ages = 992, # individuals over age 20
    pop = "j" # equal-split adults
)

save_data_file("WID", income_france, "income_france.rds")
```

Download data for the shares of France's pre-tax national income.
:::

(*For this R code chunk, is no output available*)
:::
:::

###### Display some data

::: my-r-code
::: my-r-code-header
::: {#cnj-display-some-wid-fr-data}
: Display some random data imported with `wid::download_wid`
:::
:::

::: my-r-code-container
::: {#lst-display-some-wid-fr-data}
```{r}
#| label: display-some-wid-fr-data
#| results: hold

data <- paste0(here::here(), "/data/WID/income_france.rds")
income_france <- base::readRDS(data)
my_glance_data(income_france, seed = 123)


```

Display some random data imported with `wid::download_wid`, including
the first and last row.
:::

------------------------------------------------------------------------

Inspecting the data, we see:

-   Our dataset has 339 records.

-   All presented records have an area code `FR`, which stands for
    France.

-   All presented records have the variable name `sptinc992j`. This
    conforms to our previous calculation in xxx

-   We see three different values for percentiles in the randomly
    displayed data: `p0p50`, `p50p90`, and `p90p100` representing the
    income of the bottom 50%, the middle 40%, and the top 10% of the
    population.

-   Our random data show a period from 1820 to 2022.

-   The quantity for each record contains the column `value`.

Overall, The result looks nice, but we must check the data more
thoroughly. Is there really only one type of variable? [^2]
:::
:::

###### Data structure

::: my-r-code
::: my-r-code-header
::: {#cnj-wid-fr-income-data-structure}
: Data structure for the France data for pre-tax income (1820-2022)
:::
:::

::: my-r-code-container
::: {#lst-wid-fr-income-data-structureD}
```{r}
#| label: wid-fr-income-data-structure

skimr::skim(income_france)
```

Using the {**skimr**} package to display the data structure for the
France pre-tax income data 1820-2022
:::

------------------------------------------------------------------------

Here, we see that no data are missing, that we have only one value for
the variables `country` and `variable`, and exactly the required three
values for `percentile`.

We also see from the small histogram for `year` that we do not have many
data points for more of the first half of the time.
:::
:::

###### National income

::: my-r-code
::: my-r-code-header
::: {#cnj-display-graph-income-france}
: Pre-tax national income inequality in France, 1820-2022
:::
:::

::: my-r-code-container
::: {#lst-display-graph-income-france}
```{r}
#| label: display-graph-income-france

ggplot2::ggplot(income_france, 
    ggplot2::aes(x = year, y = value, color = percentile)) +
    ggplot2::geom_line() + 
    ggplot2::geom_point() +
    ggplot2::ylab("share of income") +
    ggplot2::scale_color_discrete(
        labels = c("p0p50" = "bottom 50%", "p90p100" = "top 10%", "p50p90" = "middle 40%")
    ) + 
    ggplot2::ggtitle("Pre-tax national income inequality in France, 1820-2022") +
    ggplot2::theme(legend.position = "bottom")

## save plot just once
# ggplot2::ggsave(filename = "BHE-sptinc992j_fr.png")
```

Pre-tax national income inequality in France, 1820-2022
:::

------------------------------------------------------------------------
:::
:::
:::

[^2]: How important this check is showed me a previous version in which
    I had not included `ages = 992` because I thought the adult
    population was already defined with `pop = "j"`, the letter code for
    equal-split *adults*. But it turned out that without the explicit
    definition for the age, I also downloaded the default value `999`
    (all ages).

::: grid
::: g-col-6
![Figure 7 of `r glossary("BHE")`, taken from the [original source on
Piketty's
website](http://piketty.pse.ens.fr/files/equality/).](BHE-Figure-07-Piketty-min.png){#fig-figure7-piketty-3
fig-align="center" group="BHE-figure-compare2"}
:::

::: g-col-6
![Resulting figure after data download and plotting with
R](BHE-sptinc992j_fr-min.png){#fig-BHE-sptinc992j-fr fig-alt="alt-text"
fig-align="center" width="100%" group="BHE-figure-compare2"}
:::
:::

## Comparison of my result with the original Figure 7

We are pretty near if we compare the above plot with the original
figure. Besides the mentioned difference in the magnitude of the top 10%
and middle 40% before 1900, there are the following differences:

-   title
-   grid for x- and y-axis
-   symbols for the data points
-   position of the legend
-   text of legend
-   the smoothness of the time series

However, these differences are all solvable with the appropriate R code.
Except for the last point (smoothness), I leave it here because the
purpose of this article was to work with `r glossary("WID")` (and not to
replicate figure 7 of `r glossary("BHE")` exactly.)

I have no working experience with time series, but there are articles
and tutorials on how to smooth time series. I still have to look into
this issue. Therefore, I will list these resources for later reading and
blog posts.

::: my-resource
::: my-resource-header
::: {#lem-smoothing-time-series}
: Some internet resources on smoothing time series
:::
:::

::: my-resource-container
Without ranking, just a miscellaneous list of resources:

-   How to smooth a times series on R?
    ([StackOverflow](https://stackoverflow.com/questions/28924681/how-to-smooth-a-times-series-on-r))
-   An Introduction to Time Series Smoothing in R:
    [BoostedML](https://boostedml.com/2020/05/an-introduction-to-time-series-smoothing-in-r.html)
    (Articles on Statistics and Machine Learning for Healthcare)
-   Smoothing time series with R: [R-Bloggers
    2010](https://www.r-bloggers.com/2010/03/smoothing-time-series-with-r/)
-   Smoothing Time Series Data: [R-Bloggers
    2018](https://www.r-bloggers.com/2018/07/smoothing-time-series-data/)
-   sma() - Simple Moving Average: \[R Package for time series
    smoothing\]https://cran.r-project.org/web/packages/smooth/vignettes/sma.html
-   Smoothing time series: [PennState Eberly College of
    Science](https://online.stat.psu.edu/stat510/lesson/5/5.2)
-   Smoothing time series with R: [Revolutions
    blog](https://blog.revolutionanalytics.com/2010/03/smoothing-time-series-with-r.html)
    -- Milestones in AI, Machine Learning, Data Science, and
    visualization with R and Python since 2008
:::
:::

## Conclusion

I have shown procedures for working with the inequality data of
`r glossary("WID")`.

-   One approach explores the interactive website on
    [wid.world](https://wid.world/) and tries to create the desired
    graph. There are several ways to use the resulting figure:
    -   Downloading the picture as `r glossary("JPG")`
    -   Embedding a link to the interactive graph on your website
    -   Embedding the result as`r glossary("iframe")` in your website
    -   Exploring the code in the URL and using it for the second
        approach (downloading the required data with R)
-   The second approach uses the {**wid**} R package, especially the
    function `wid::download_wid()`. Knowing the required codes for the
    download function is essential. The first approach could help find
    the correct code composition in the WID code book, the [Codes
    Dictionary](https://wid.world/codes-dictionary/).

::: {#imp-how-to-not-enough .callout-important style="color: red;"}
##### How-to procedures are not enough

The post only describes "how-to" procedures for WID and does not discuss
the available concepts appropriate for specific research questions. I
plan to describe and reflect on concepts for inequality research in
later blog posts.
:::
