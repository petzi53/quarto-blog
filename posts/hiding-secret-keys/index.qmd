---
title: "Hiding a secret API token"
subtitle: "An article that explains something."
author: "Peter Baumgartner"
date: "2023-05-06"
date-modified: "2023-05-06"
image: ""
categories: [API, httr2]
draft: false
---

I plan to write an R Package. I will call it `hypo2md`, and it should
search and import annotations from
[Hypothes.is](https://web.hypothes.is/ "is a open-source software for web annotations")
into R markdown files. I need this functionality to process my
highlights and comments generated during reading in my note-taking app
[Obsidian](https://obsidian.md/ "Obsidian is a note-taking app").¬†

But writing about my package plans is not the goal of this post. Here I
want to describe one of the learnings I had during my first experiments
with the¬†[Hypothes.is
API](https://h.readthedocs.io/en/latest/api-reference/).

Reading the two articles by Hadley Wickham about [httr2 R
package](R%20package) ([get
started](https://httr2.r-lib.org/articles/httr2.html)¬†and¬†[wrapping
APIs](https://httr2.r-lib.org/articles/wrapping-apis.html)), I learned
the basics of how to interface with APIs. As Hypothes.is requires an API
user token, one particular problem I would need to overcome is¬†[secret
management](https://httr2.r-lib.org/articles/wrapping-apis.html#secret-management).

Even after reading the detailed instructions multiple times, the code
described in "Wrapping APIs" didn't work for me. As I finally solved the
problem, I thought my errors could be interesting for other Newbies as
well.

## 5 steps to hide your secrets

I am not going to use executable R program code for the explanation. It
is difficult to show the functionality in a blog post and it may be even
more difficult to prevent misunderstanding as it happened with me, when
I followed the code.

::: callout-note
Note that there are five types of callouts, including: `note`,
`warning`, `important`, `tip`, and `caution`.
:::

::: callout-tip
## Tip with Title

This is an example of a callout with a title.
:::

::: {.callout-caution collapse="true" appearance="default"}
## Expand To Learn About Collapse

This is an example of a 'folded' caution callout that can be expanded by
the user. You can use `collapse="true"` to collapse it by default or
`collapse="false"` to make a collapsible callout that is expanded by
default.
:::

## Some formatting commands

``` {.zsh filename="Terminal"}
quarto create-project myproject
```

+------------------------------------+------------------------------------------+-------------------------------+
| ``` {.yaml filename="_quarto.yml"} | ``` {.yaml filename="dir/_metadata.yml"} | ``` {.yaml filename="merged"} |
| format:                            | format:                                  | format:                       |
|   html:                            |   html:                                  |   html:                       |
|     toc: true                      |     code-fold: true                      |     toc: true                 |
| bibliography:                      | bibliography:                            |     code-fold: true           |
|   - refs.bib                       |   - proj.bib                             | bibliography:                 |
|                                    |                                          |   - refs.bib                  |
|                                    |                                          |   - proj.bib                  |
| ```                                | ```                                      | ```                           |
+------------------------------------+------------------------------------------+-------------------------------+

: {tbl-colwidths="\[33,33,33\]"}



+------------------------------------+------------------------------------------+
| ``` {.yaml filename="_quarto.yml"} | ``` {.yaml filename="dir/_metadata.yml"} | 
| format:                            | format:                                  |
|   html:                            |   html:                                  |  
|     toc: true                      |     code-fold: true                      | 
| bibliography:                      | bibliography:                            |  
|   - refs.bib                       |   - proj.bib                             | 
|                                    |                                          | 
|                                    |                                          |  
| ```                                | ```                                      |          
+------------------------------------+------------------------------------------+

: {tbl-colwidths="\[35,65\]"}

+-------------------------------+-------------------------------------------+
| This here is a text to        | ``` {.yaml filename="dir/_metadata.yml"}  |
| explain how the program is    |  format:                                  |
| working. I am using a table   |    html:                                  |
| to format the different       |        code-fold: true                    |
| aspect of the code.           |  bibliography:                            |
|                               |     - proj.bib                            |
| It is possible to write text  |                                           |
| in two separate columns. But  | ```                                       |  
| it seem complex to produce    |                                           |
| the table. Maybe one could    |                                           |
| use a table generator?        |                                           |
|                               |                                           |
+-------------------------------+-------------------------------------------+

: {tbl-colwidths="\[65,35\]"}

| Default                           | Left | Right | Center |
|-----------------------------------|:-----|------:|:------:|
| It is possible to write text in   | 12   |    12 |   12   |
| two separate columns. But it seem | 123  |   123 |  123   |
| complex to produce the table.     | 1    |     1 |   1    |

: Demonstration of PIP Table Syntax

## Table generated from Tables Generator

| Origin            | Source                    | Note type | Category       | Subject | Emoji | Code | Title   |
|-------------------|---------------------------|-----------|----------------|---------|-------|------|---------|
| Clipping Notes    | web-clipping              |           |                |         | üåê     | 0w   |         |
| Emails            | ???                       | ???       |                |         | üì¨     | 0e   |         |
| Personal          | api-article  pb           | personal  |                |         | üôãüèª‚Äç‚ôÇÔ∏è   | 0pi  | PI      |
| Private           | scan uphold george joplin | private   | finance health |         | üÜî     | 0id  | FI GH   |
| Readwise Article  | reader api-article        |           | articles       |         | üìÑ     | 0a   | FNA LNA |
| Readwise Book     | readwise                  |           | books          |         | üìñ     | 0b   | FNB LNB |
| Readwise Podcasts |                           |           |                |         | üîâ     | 0po  | FNP     |
| Readwise Twitter  | twitter                   |           | tweets         |         | üê•     | 0t   |         |
| Zettel            |                           |           | misc           |         |       |      |         |
|                   |                           |           |                |         |       |      |         |
