{
  "hash": "fad1904a3d36fe7fa9b9ba801be4ebc6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Integrating Zotero with Obsidian\"\nsubtitle: \"Tutorial for an efficient academic workflow\"\ndescription: \"How to export annotations (= highlighted text and comments) from PDFs into your note-taking app and how to go back from your notes to the exact position of the annotation to (re)cover the context?\"\nauthor: \"Peter Baumgartner\"\ndate: \"2024-08-04\"\nimage: \"Zotero-Obsidian-Program-Icons-min.png\"\nimage-alt: \"The Zotero application icon is on the left and the Obsidian icon on the right of the image. Both icons are with two arrows, one pointing from Zotero to Obsidian and the other from Obsidian to Zotero.\"\ncategories: [academic, obsidian, workflow, zotero]\ndate-modified: \"2024-08-04\"\ndraft: true\nbibliography: references.bib\n---\n\n\n\n\n\n## Two Crucial Academic Workflow Challenges\n\nAs an academic researcher, scholar, or student, you likely find yourself\nin a similar academic workflow. You collect, read, and annotate\nscholarly articles, research papers, and books as part of your daily\nroutine. You then elaborate on this material in personal notes either\nduring the annotation process or immediately afterward.\n\nThe next step in the academic workflow involves:\n\n-   Refining and structuring the rough text passages.\n-   Incorporating feedback from peers or supervisors.\n-   Formatting them according to the publication guidelines.\n\nThese tasks can be undertaken individually or as part of a collaborative\neffort.\n\nIn this chain of timely delayed tasks, one always had to meet at least\ntwo challenges:\n\n1.  While reading and annotating, how do you know which passages would\n    later be necessary for the final publication?\n2.  Are the annotations and notes sufficient to remember the context\n    even after a long time?\n\nThese insecurities were still more cumbersome when one did not always\nhave immediate access to the original material, such as when you lent a\nbook from a library or the danger that the webpage could always\ndisappear.\n\nOne counter strategy to meet these challenges is to be safe and collect\nas much material as possible. This includes saving all relevant\nresources, making detailed annotations, and systematically organizing\nthem. But even then, finding the exact position of the text passage I\nwas looking for took time and effort.\n\nIn response to these challenges, I will introduce a solution that\nsignificantly improves the efficiency of your academic workflow,\nparticularly when you always have access to the PDF resource.\n\n## Annotations in Zotero\n\nI started using Zotero on December 30, 2007—yes, during the holidays! I\nalways use the holidays to learn new apps and try things out. My Zotero\ndatabase currently holds 5872 items created during more than 15 years of\nresearch. Until last year, I mainly used Zotero to produce correct\nformatted citations for publication. However, these changed when I\nlearned new note-taking possibilities emerged with [Zotero\n6](https://www.zotero.org/blog/zotero-6/) (March 2022). It took me over\na year to transform my workflow. [Old habits die\nhard](https://idioms.thefreedictionary.com/Old+Habits+Die+Hard).\n\nThis article focuses on the integration between Zotero and Obsidian.\nHowever, I will summarize some aspects of Zotero's annotation process\nrelevant to the export/import process.\n\n------------------------------------------------------------------------\n\n### Book recommendation\n\n::: grid\n::: g-col-6\nFor those of you that are interested to learn more about the philosophy\nand theory of annotation, I recommend the book-length treatment\n\"Annotation\" by Remi Kalir & Antero Garcia [-@kalir2021].\n\nThere is also a\n[website](https://mitpressonpubpub.mitpress.mit.edu/annotation) were you\nnot only can you read the book for free, but you can also see how\nannotations features are used for an [open peer review\nprocess](https://plos.org/resource/open-peer-review/) of the book\n[@kalir2020].\n\n::: {#def-annot .callout-important style=\"color: red;\"}\nHere, I will understand under the term \"annotation\" every addition\nanchored to the text and reinforces it. Annotations are a kind of\n[paratext](https://en.wikipedia.org/wiki/Paratext), produced outside the\ntext but constantly referring and tied to it.\n:::\n:::\n\n::: g-col-6\n![Book cover of Annotation by Remi Kalir & Antero\nGarcia](cover-annotation-min.jpg){#fig-cover-annotation\nfig-alt=\"black background with a big red star on the lower left half. At the top it says in red 'Annotation' and underneath in smaller white letters 'Remi Kalir And Antero Garcia'. There is a red bar on the bottom of the image and a white text saying 'The MIT Press Essential Knowledge Series\"\nfig-align=\"center\" width=\"70%\"}\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Five types of annotations in Zotero {#sec-five-types-annot}\n\nIn Zotero exists five types of annotations: highlighted text, sticky\nnotes, screenshots, comments and tags.\n\n#### 1. Highlighting text\n\n::: grid\n::: g-col-3\n![Zotero has eight colors to\nchoose](zotero-colors-to-choose-min.png){#fig-14-04 fig-alt=\"alt-text\"\nfig-align=\"center\" width=\"100%\"}\n:::\n\n::: g-col-9\nTo highlight text, click the pencil symbol at the top toolbar. You have\n8 colors for highlights at your disposal: yellow, red, green, blue,\npurple, magenta, orange, and gray. You can set your preferred color as\nthe default color, which is, in my case, yellow.\n\nThe chosen color overlays the text passage. This is a problem when you\nwant to print out your annotations. The upcoming version 7 of Zotero --\nwhich is already available as [Zotero 7\nBeta](https://forums.zotero.org/discussion/105094/announcing-the-zotero-7-beta/p1)\n-- will therefore support underlining.\n\nIt is crucial to design a consistent system when to use each color,\nbecause this will allow you to organize your annotations in Obsidian.\n:::\n:::\n\nSome people have developed a system of argumentation types to\ndistinguish the different highlighting colors. Below are two examples to\ngive you a flair for the idea.\n\n| Color   | [mgmeyers](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/2) | My own system                                 |\n|:--------|:------------------------------------------------------------------------------------|:----------------------------------------------|\n| Yellow  | Relevant / important                                                                | Running text                                  |\n| Red     | Disagree                                                                            | Concepts, Definition, Important               |\n| Orange  | Question / confusion                                                                | Resources (articles / books / package / URLs) |\n| Green   | Agree                                                                               | Code                                          |\n| Blue    | Relevant to current task                                                            | Section                                       |\n| Magenta | TODO / follow up                                                                    | Chapter                                       |\n| Purple  | Definitions / concepts                                                              | ToDo                                          |\n| Gray    | Interesting but not relevant                                                        | Figure / table title                          |\n\n: Two examples of color classifications for text highlights\n{#tbl-color-classification}\n\nI will explain more about the purpose of an appropriate classification\nsystem when we talk about Obsidian templates for the import of the\nZotero annotations.\n\n#### 2. \"Sticky\" notes\n\nTo add a \"sticky\" note, click on the piece of paper symbol with the\nearmark in the top toolbar. Then, you can click on a place in the PDF to\ngenerate the note. A \"sticky\" note symbol appears on the page, and on\nthe left bar, a note box open for writing comments. You can move the\n\"sticky\" note around the page, but you can't move it to another page\n(therefore \"sticky\").\n\nThe primary purpose of \"sticky\" notes is to add a text annotation that\nrelates to the text but not to a specific passage of the text. This can\nbe, for instance, a comment on the structure of the text, a comment\nrelated to several paragraphs, or a recurring argument.\n\n#### 3. Snapshots\n\nBy clicking on the black box surrounded by a rectangular selection, you\ncan drag with the cursor to select the area of the screen to capture.\nYou can add comments and tags as in the other two annotation types, but\nyou can also copy the picture or save it as a <a class='glossary' title='Portable Network Graphic (PNG) is a non-patented raster graphics file format that supports lossless data compression. The format was not designed for professional-quality print graphics but for transferring images on the Internet (hence the name ‘portable’). (Wikipedia)'>PNG</a> file\nto your disk.\n\n#### 4. Comments\n\nYou can add additional text to all three types of annotations as your\ncomments. Strange enough: You can also edit the highlighted text stored\nas annotation. Frankly, I do not know appropriate use cases because,\nwith these changes, you would temper the original quote.\n\n#### 5. Tags\n\nAnother way to annotate a document is to add tags to highlighted text,\n\"sticky\" notes, screenshots, or comments.\n\nInside the document (e.g., whenever the PDF document is open and visible\nin the middle pane), you can select all annotations with the same tag.\nColors work as a tag, too. Hence, you can select all highlighted text in\nthe same color. You can also combine different tags. For instance, two\ntext tags with two colors will select all annotations that have one of\nthese text tags or one of the chosen colors.\n\nOutside the document, the tag works as a standard document tag in the\ntag pane at the bottom of the left column. Although the tags are\nattached to specific annotations outside the PDF (e.g., in the tag\npane), they will select only the Zotero item with the document where the\ntag was used and not the appropriate annotations. But if you use the\nsame tag for annotation in different documents, Zotero will open all\nitems where these tags were applied.\n\nWe will see that after the export to Obsidian, these annotated tags gain\npower as the work across all Obsidian documents!\n\n### Summary\n\nThe following annotated screenshot recapitulates graphically the above\ntextual description. For more detailed how-to information, read the\n[Zotero help page](https://www.zotero.org/support/pdf_reader) or [search\nfor video\ntutorials](https://search.brave.com/search?q=youtube+video+zotero+annotation).\n\n![Screenshot of Zotero PDF Reader and Note Editor with explanations of\nthe graphical user interface (<a class='glossary' title='A graphical user interface (GUI) is an operating system interface that enables user interactions with an electronic device through icons, images, and other graphical elements G2.'>GUI</a>). Click on the image\nto enlarge\nit.](Screenshot-Zotero-Annotation-Skitch-min.png){#fig-zotero-annotations\nfig-alt=\"The screenshots shows three horizontally divided panes: Left are the annotations, in the center is the content of the PDF file and right are ten annotations collected as a separate note item.\"\nfig-align=\"center\" width=\"100%\"}\n\n## Child and Standalone Notes in Zotero\n\nZotero knows two types of notes. (The type names are my inventions to\nfacilitate the explanation):\n\n-   **Child Note or Items Note** belongs to the item where it was\n    created. It lives inside the Zotero item.\n-   **Standalone Notes** lives in the appropriate Zotero item collection\n    but does not belong to any specific Zotero item. This note type is\n    helpful for writing notes for multiple items.\n\nOnly the child note is an annotation because it fulfills the requirement\nof the annotation @def-annot: It is anchored to specific text -- even if\nit consists itself of (a collection of) annotations.\n\nBoth types of notes can be created either as individual notes or as a\nnote that collects all highlights:\n\n-   **Individual note**: This is a new, empty note item. You can write\n    your text into the note directly, or you can also drag and drop\n    annotations from the left column.\n-   **Highlights note**: This note collects and copies all content\n    created with the annotation types, as mentioned earlier.\n\n## How to create a child note in Zotero\n\nBut the distinction between individual and highlight notes is not carved\nin stone, as you can always add text or other types of annotations into\nnotes or drag the complete note as an item itself in the Zotero middle\npane.\n\nTo get into the start position for the following graphics, you have to\nselect a PDF attached to a Zotero item element by double-clicking on the\nitem or the PDF inside the item.\n\n::: grid\n::: g-col-1\n:::\n\n::: g-col-5\n![How to add item notes](zotero-add-note-skitch-min.png){#fig-14-04\nfig-alt=\"alt-text\" fig-align=\"center\" width=\"95%\"}\n:::\n\n::: g-col-4\n1.  Click on the notepad symbol on the right pane to open the note tab.\n2.  Click on the upper +-sign button to open the drop-down menu and\n    choose \"Add Item Note\" to create an empty note or \"Add Item Note\n    from Annotations\" to create a note with all the PDF annotations.\n:::\n\n::: g-col-1\n:::\n:::\n\nThe action above results in the view of the right pane in\n@fig-zotero-annotations. The text in parenthesis in \"Added (external)\nitem note from annotation\" refers to the note generated from the\nannotations created and edited on the left pane. This is in contrast to\nthe (internal) annotations inside the PDF. Typically, there shouldn't be\nany difference, but I mentioned that you can edit the highlighted text.\nIn that particular case, there is a difference between external and\ninternal annotations.\n\nTo repeat: An \"item note\" is a note that is sorted under a Zotero item,\nindependently of where it was created initially. The plus sign under the\n\"All Notes\" header creates a standalone note sorted at the top of the\nappropriate folder/collection. This standalone note can be empty or\ngenerate external annotations like the item note.\n\nWe generate an item/child note as the easiest way to export notes into\nObsidian. This has the disadvantage that changes in the Zotero\nannotations need another export to Obsidian. We will, therefore, cover\nan alternative -- more complex way -- where the Obsidian plugin extracts\nthe annotations directly from the PDF.\n\n------------------------------------------------------------------------\n\n###### Glossary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> GUI </td>\n   <td style=\"text-align:left;\"> A graphical user interface (GUI) is an operating system interface that enables user interactions with an electronic device through icons, images, and other graphical elements [G2](https://www.g2.com/articles/graphical-user-interface). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PNG </td>\n   <td style=\"text-align:left;\"> Portable Network Graphic (PNG) is a non-patented raster graphics file format that supports lossless data compression. The format was not designed for professional-quality print graphics but for transferring images on the Internet (hence the name 'portable'). (Wikipedia) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}