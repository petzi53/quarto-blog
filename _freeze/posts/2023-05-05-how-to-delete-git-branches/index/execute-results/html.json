{
  "hash": "841775120d0c7590c8356b922f4f7702",
  "result": {
    "markdown": "---\ntitle: \"How to delete Git branches\"\nsubtitle: \"The limits of RStudio and of the `pr_*()` family of {usethis} functions\"\ndescription:  |\n  The article explains how I finally succeeded in deleting different branches\n  in Git. It turned out – contrary to my previous mental model – that there\n  are not only two branches but three (local, remote origin, and local\n  remote-tracking branch).\nauthor: \"Peter Baumgartner\"\ndate: \"2023-05-05\"\nimage: \"git-cover-min.png\"\nimage-alt: \"Git Logo\"\ncategories: [git, github, how-to]\ndate-modified: \"2023-05-05\"\nengine: knitr\n---\n\n\n## If a pull request is not accepted...\n\nAs I am not very experienced with R and coding, my knowledge of using\nGit and GitHub is limited. Usually, I use the `pr_*()` family of usethis\nfunctions as pull request helpers. They work very well -- as long as the\nworkflow follows the standard (successful) workflow:\n\nInitiate the pull request with `pr_init(<branch name>)` Submit the\nchanges in the new branch with `pr_push()`. Click the \"Create pull\nrequest\"-button to make the PR. After the code is accepted and merged,\nconclude the process with `pr_finish()`. This sequence does not fly if\nthe workflow deviates from the above model. The mentioned article\ndescribes the scenario of a discussion between contributor and reviewer\nthat finally results in the acceptance of the PR. But what about a\nrejection of the PR?\n\n## ... deletion of the remote branch with GitHub is not enough\n\nThis situation happened to me after I proposed fixing a typo for a repo\nthat had been frozen because of a necessary general overhaul. I thought\nto delete the submitted remote branch at the GitHub site would bring me\nback to my initial position.\n\n![**Screenshot 1**: Delete obsolete branch \"typo\" at GitHub site\n(simulated for this\narticle).](images/delete-remote-branch-at-github.png){fig-alt=\"A screenshot shows the default branch \\\"master\\\" and \\\"Your branches\\\" named \\\"typo,\\\" which also figures under \\\"Active branches\\\". The cursor hovers over the trash can to delete the active branch \\\"typo\\\".\"\nfig-align=\"center\"}\n\nBut back in RStudio, it turned out that the deleted branch was still\nthere.\n\n![**Screenshot 2**: Local and Remote branches seen in\nRStudio](images/git-branches-at-rstudio.png){fig-alt=\"The window shows under the two headings \\\"(Local Branches\\\") and (Remote: Origin) with \\\"master\\\" and \\\"typo\\\" two branches.\"\nfig-align=\"center\"}\n\nOk, I understood that my remote action did not delete the local branch\ntoo. But why was the remote branch still there? After all, I had it just\nremoved. (I double-checked the deletion, and the remote branch at the\nremote GitHub site was, in fact, completely gone.\n\n## There are three, not two branches\n\nAfter some research, I found an answer at StackOverflow with over 25.000\nviews! It seems that I am not the only one surprised by the situation.\n\nAfter reading this and other answers at SO, I learned that there are\nthree different branches:\n\n> When you're dealing with deleting branches both locally and remotely,\n> keep in mind that there are three different branches involved: The\n> local branch X. The remote origin branch X. The local remote-tracking\n> branch origin/X that tracks the remote branch X. I deleted the remote\n> origin branch X manually at the GitHub site. The local branch but also\n> the local remote-tracking branch were still functional!\n\nFor every one of these three branches, one needs different commands to\ndelete them. And here -- as far as I understood -- we have met the\nlimits of RStudio and/or {usethis.} For the following commands, you have\nto change from the console to the terminal.\n\n## Useful commands for deleting branches\n\n#### Deleting a remote branch\n\n``` zsh\ngit push origin -d <branch>\n```\n\n#### Deleting a local branch\n\n``` zsh\ngit checkout master # change branch, you can't delete a branch you are working on\ngit branch -d <branch>\ngit branch -D <branch> # Force-delete un-merged branches\n```\n\n#### Deleting a local remote-tracking branch\n\n``` zsh\n# 'dr' stands for \"delete remotes\"\ngit branch -dr <remote>/<branch>\ngit branch -dr origin/dev # example\n\n# Delete multiple obsolete remote-tracking branches\ngit fetch <remote> -p  # 'p' stands for \"prune\"\ngit fetch origin -p    # example\n```\n\n::: callout-note\nDon't forget to refresh the RStudio listing to verify that you have\ndeleted the branches.\n:::\n\n\n::: {.cell}\n<style type=\"text/css\">\n.column {\ntext-align: center;\n}\n</style>\n:::\n\n\n::: columns\n::: {.column width=\"50%\"}\n![Click on the circle symbol at the top right\ncorner...](images/rstudio-refresh-branch-listing-circle-min.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![... and choose \"Refresh Now\" to list the branches currently\navailable.](images/rstudio-refresh-branch-listing-manually-min.png){fig-align=\"center\"}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}