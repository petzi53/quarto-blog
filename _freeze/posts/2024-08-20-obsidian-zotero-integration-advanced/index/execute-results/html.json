{
  "hash": "11b1bfdaa123fa067f691ed45afb806b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Annotation Tutorial 3: Zotero - Obsidian Integration Advanced\"\nsubtitle: \"Using the Nunjucks Template Language to Import Zotero Annotations into Obsidian\"\ndescription: \"Here, I explain an advanced feature of the Obsidian Zotero Integration Plugin: How can annotation from Zotero documents be scraped and imported programmatically as a note into Obisidan?\"\nauthor: \"Peter Baumgartner\"\ndate: \"2024-08-20\"\nimage: \"nunjucks-zotero-obsidian-skitch-logo2-min.png\"\nimage-alt: \"The Zotero application icon is on the left, and the Obsidian icon is on the right of the image. Below both app icons is the Nunjucks icon. There are two arrows, one from Zotero to Nunjunck and the other from Nunkunck to Obsidian.\"\ncategories: [academic, obsidian, workflow, zotero, how-to]\ndate-modified: \"2024-08-20\"\ndraft: false\nbibliography: references.bib\n---\n\n\n\n\n\n## Objectives\n\nAfter the creation of Zotero annotations, as explained in [Annotation\nTutorial 1](../2024-08-20-annotations-with-zotero-version-7) and the\ninstallation of two plugins (see: [Annotation Tutorial\n2](../2024-08-12-academic-workflow-obsidian-zotero)) you can import your\nannotations into Obsidian. In the second part of the tutorial I\ndescribed the easy way by using the default mechanism of the Zotero\nIntegration <a class='glossary' title='A plug-in (or plugin, add-in, addin, add-on, or addon) is a software component that adds a specific feature to an existing computer program. (Wikipedia)'>plugin</a>.\n\nIn this third part of the tutorial, I am going to explain the more\ncomplex import procedure by using templates. We have said that the\nconfiguration setting page for the \"Zotero Integration\" plugin consists\nof four parts:\n\n-   General Settings ([Tutorial Part\n    2](../2024-08-12-academic-workflow-obsidian-zotero))\n-   Citation Formats (skipped)\n-   Import Formats and (required and explained in this post)\n-   Import Image Settings (additional configuration, also explained\n    here)\n\nI will skip the part on \"Citation Formats\" here. This section uses the\nintegration with Zotero to produce different kinds of citation formats\ninside Obsidian. Except for \"Formatted Bibliography,\" these formats\nproduce code within Obsidian usable for further conversion. Export\nprocedures. We can skip this part of the settings here for our purposes.\n\n## Zotero - Obsidian Integration with Templates\n\nAlthough all annotations are imported into Obsidian without templates,\nyou will lose many <a class='glossary' title='Metadata (or metainformation) is “data that provides information about other data” (Merriam-Webster), but not the content of the data itself, such as the text of a message or the image itself. (Wikipedia)'>metadata</a> of your notes. Without a\ntemplate, you are missing two types of metadata:\n\n-   Metadata about the Zotero bibliography item (author, title, year,\n    publisher, location, abstract, item tags, etc.)\n-   Metadata about the annotation (colors and tags of the annotations)\n\nYou also lose control of where to store the files for notes and images\n(default: your attachment folder) and to store images as\n<a class='glossary' title='JPEG (/ˈdʒeɪpɛɡ/ JAY-peg, short for Joint Photographic Experts Group is a commonly used method of lossy compression for digital images. (Wikipedia)'>JPG</a> (default: <a class='glossary' title='Portable Network Graphic (PNG) is a non-patented raster graphics file format that supports lossless data compression. The format was not designed for professional-quality print graphics but for transferring images on the Internet (hence the name ‘portable’). (Wikipedia)'>PNG</a>).\n\nCreating a Zotero Integration template is a complicated process for two\nreasons:\n\n1.  You have to know how to apply the\n    [Nunjucks](https://mozilla.github.io/nunjucks/templating.html)\n    template syntax. Nunjucks is a JavaScript templating language,\n    supported by all modern browsers.\n2.  You must know the names of the variables you want to import. You can\n    inspect the variable names with the \"Data Explorer\" command of the\n    Obsidian-Zotero Integration plugin.\n\nAfter choosing the \"Data Explorer\" command, Obsidian will open a new\nhorizontal section with two buttons on the top.\n\n1.  **Prompt for Selection**: It displays a dialog window to choose your\n    library and Zotero item you want to import. Please be patient —\n    Obsidian may take seconds to open the dialog window.\n2.  **Preview Import Format**: This is the default value of this menu\n    (button). It will display all the variable's names and values for\n    the Zotero item. However, you can also select one of your templates\n    defined in the Zotero Integration plugin to see the result. The\n    \"Data Explorer\" is an important tool for creating and improving\n    Obsidian-Zotero Integration templates.\n\n![Part of the Data Explorer for the Zotero Integration plugin. You can\nopen/close hierarchical values by clicking on the small triangle as is\nshown in the middle of the screenshot with\n\"creators\".](advanced-zotero-integration-data-explorer-min.png){#fig-zotero-integration-data-explorer\nfig-alt=\"The screenshot shows the top two buttons, 'Prompt for Selection' and Preview Import Format'. What follows is the internal structure of the Zotero annotation. It starts with 'Template Data {} 45 keys' with an opened triangle on the left. The next intended line starts gray with 'abstractNote' followed by the text of the abstract in yellow. Another intended line in gray says 'alltags' followed by yellow 'inequality' in double parenthesis. And so on. There are many different intended lines with closed triangles on the left, except for an open triangle saying 'creators' in gray followed by '[] 3 items' in white. The following three lines display the values for 'creators' with separate lines for 'creatorType author'; 'firstName Amary'; 'lastName Gethin'. There are many more lines with different values but similar structures.\"\nfig-align=\"center\" width=\"70%\" group=\"zotero-integration\"}\n\n## Template Examples\n\n### Nunjucks Template Language\n\nThe best way to learn how to apply the Nunjucks template language is to\nlook through the somewhat meager [documentation of the\nplugin](https://github.com/mgmeyers/obsidian-zotero-integration/blob/main/docs/README.md)\nand then experiment with examples developed by other people. I have\ncollected several examples for Obsidian-Zotero Integration templates.\n\n::: my-example\n::: my-example-header\nExamples of Nunjucks templates\n:::\n\n::: my-example-container\n<details>\n\n<summary>Commented list of templates examples</summary>\n\n-   [Doing History with Zotero and\n    Obsidian](https://publish.obsidian.md/history-notes/01+Notetaking+for+Historians):\n    A very detailed article which not only contains a template example\n    but also explains the whole integration process similar to this post\n    here [@razglova2023].\n-   [An Updated Academic Workflow: Zotero &\n    Obsidian](https://medium.com/@alexandraphelan/an-updated-academic-workflow-zotero-obsidian-cffef080addd):\n    A detailed explanation of the whole process with a sophisticated\n    Zotero Integration template [@phelan2024a].\n-   There is a collection of several templates in an important [Obsidian\n    Forum\n    post](https://forum.obsidian.md/t/zotero-integration-import-templates/36310).\n    There are many posts about general questions about how to apply the\n    templates, I will list some posts that include template codes for\n    you to experiment:\n    -   [mgmeyers](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/2):\n        An excellent and detailed template from the author of the Zotero\n        Integration plugin. It also has code for strikethrough and\n        underlining, which was impossible in the Zotero PDF reader at\n        the time of the posting. This may originate from an external PDF\n        reader. Another caveat: The color codes need to be corrected.\n    -   [erazlogo](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/3):\n        The author of the Doing History website mentioned above. Very\n        detailed, it has on other pages of the website many other\n        important practical tips for usage of the Zotero-Obsidian\n        integration.\n    -   [apflestrudelig](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/8):\n        Several templates for special tasks, but truncated. To see the\n        full template code, go to the [Gist article on\n        GitHub](https://gist.github.com/lguenth/e8a5c4fa0b4a1ed6f8bd0b9ccfc31013)\n        Click on the right top raw buttons to access the source file.\n    -   [gustafferson](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/11):\n        a comment with a reference to the template code in a \\[GitHub\n        gist article\\]\n        (https://gist.github.com/Gustafferson/698e92d1ac939d60a63aac35fe4c4c4e).\n    -   [Zocahontas1](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/12):\n        Similar to mgmeyers but using for the color codes, the [Obsidian\n        Highlights\n        plugin](https://github.com/chetachiezikeuzor/Highlightr-Plugin).\n    -   [Zocahontas2](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/16):\n        How do you add page numbers and a revised template?\n    -   [espalia1](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/65):\n        Learned from the previous template approaches with minor tweaks.\n        Added the meaning of the annotation colors to the output, that\n        is mainly sorted by colors and inside the colors, then by\n        chronology.\n    -   [espalia1](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/66):\n        An updated version. Instead, for every quote its own callout, it\n        just has one callout (admonition in Obsidian parlance) for every\n        color. This improves reading tremendously.\n    -   [Cat](https://forum.obsidian.md/t/zotero-integration-import-templates/36310/67):\n        A template with a very sophisticated text color system. The\n        template uses notion color blocks snippets from [GitHub -\n        deathau/obsidian-snippets](https://github.com/deathau/obsidian-snippets)\n        to have different colored texts. (But this didn't work for me\n        after a quick first trial.) Comments are in callouts, and the\n        [Dataview\n        plugin](https://blacksmithgu.github.io/obsidian-dataview/) is\n        also used to generate a table of contents.\n-   I just found out that there is [another forum\n    thread](https://forum.obsidian.md/t/my-zotero-annotation-template-that-works/51662)\n    about Zotero Integration templates. It is shorter and started\n    January 2023, with the last post (so far) May 2024. I will add just\n    one example here:\n    -   [Albialy](https://forum.obsidian.md/t/my-zotero-annotation-template-that-works/51662):\n        A simple template with the interesting feature that the colors\n        of the Zotero, annotations are converted to underlined colors in\n        Obsidian. (Maybe the conversion from background colors to\n        underline-colors is a feature of Obsidian or of one of its\n        plugin I am using.)\n\nI have stopped with forum entry number 67 of 312 comments (February\n2023) of the first Obsidian forum thread and just mentioned one of the\nsmaller (37 comments). So, there may be some other exciting templates in\nmore recent times.\n\n</details>\n:::\n:::\n\n### My template code\n\nI am still refining my template to catch new possibilities of version 7\nof Zotero. Therefore, the following template code is a work in progress\n(WIP)\n\nTo understand how the colored highlights are interpreted, look up my\ncolor classification in the [first part of the annotation\ntutorial](../2024-08-04-annotations-with-zotero-version-7#tbl-color-classification).\n\n::: my-r-code\n::: my-r-code-header\nMy personal example for a Nunjucks template code\n:::\n\n::: my-r-code-container\n<details>\n\n<summary>My Nunjucks Template Code to Copy</summary>\n\nHover the gray field to see the copy button at the top right.\n\n``` default\n---\nUID: <% tp.file.creation_date(\"YYYYMMDDHHmm\") %>\ncreated:\nupdated:\nnote: fleeting\nstatus: to_process\nlanguage: english\nsource: \ncategory: \nsubject: \nalias:\ncssclass: literature-note\nalias: [{% if shortTitle %}\"{{shortTitle | safe}}\"{% else %}\"{{title | safe}}\"{% endif %}]\n---\n\n\n{%- macro colorValueToName(color) -%}\n    {%- switch color -%}\n         {%- case \"#ffd400\" -%}\n            Running Text (Yellow)\n        {%- case \"#ff6666\" -%}\n            Concepts, Definition, Important (Red)\n        {%- case \"#f19837\" -%}\n            ToDo (Orange)\n        {%- case \"#5fb236\" -%}\n            Resources (Articles / Books / Package / URLs)\n        {%- case \"#2ea8e5\" -%}\n            (R) Code (Blue)\n        {%- case \"#e56eee\" -%}\n            Chapter (Magenta)\n        {%- case \"#a28ae5\" -%}\n            Section (Purple)\n        {%- case \"#aaaaaa\" -%}\n            Figure, Table header, TOC Summaries (Gray)\n        {%- default -%}\n            No Color \n    {%- endswitch -%}\n{%- endmacro -%}\n\n{%- macro calloutHeader(type) -%}\n    {%- switch type -%}\n        {%- case \"highlight\" -%}\n            Highlight\n        {%- case \"strike\" -%}\n            Strikethrough\n        {%- case \"underline\" -%}\n            Underline\n        {%- case \"image\" -%}\n            Image\n        {%- default -%}\n            Note\n    {%- endswitch -%}\n{%- endmacro %}\n\n> [!info]\n> - **Cite Key:** [[@{{citekey}}]]\n{%- for attachment in attachments | filterby(\"path\", \"endswith\", \".pdf\") %}\n> - **Link:** [{{attachment.title}}](file://{{attachment.path | replace(\" \", \"%20\")}})\n{%- endfor -%}\n{%- if abstractNote %}\n> - **Abstract:** {{abstractNote}}\n{%- endif -%}\n{%- if bibliography %}\n> - **Bibliography:** {{bibliography}}\n{%- endif %}\n{%- if hashTags %}\n> - **Tags:** {{hashTags}}\n{%- endif %}\n\n\n# Highlights by Sequence\n\n## Imported on {{importDate | format(\"YYYY-MM-DD HH:mm\")}}\n\n{% for annot in annotations -%}\n{%- if annot.annotatedText -%}\n**Highlight**: {{annot.annotatedText | nl2br}}\n{%- endif -%}\n{%- if annot.imageRelativePath %}\n![[{{annot.imageRelativePath}}]]\n{%- endif %}\n{%- if annot.ocrText %}\n{{annot.ocrText}}\n{%- endif %}\n{%if annot.comment %}\n**Comment**: {{annot.comment | nl2br}}\n{%- endif %}\n{% if annot.allTags %}\n**Tag**: {{annot.allTags | nl2br}}\n{% endif  %}\n [Page {{annot.page}}](zotero://open-pdf/library/items/{{annot.attachment.itemKey}}?page={{annot.page}}) {{annot.date | format(\"YYYY-MM-DD HH:mm\")}}\n***\n{% endfor %}\n\n\n{% persist \"annotations\" %}\n{% set annots = annotations | filterby(\"date\", \"dateafter\", lastImportDate) -%}\n{% if annots.length > 0 %}\n\n\n## Imported on {{importDate | format(\"YYYY-MM-DD HH:mm\")}}\n# Sorted by Colors\n{% for color, annots in annots | groupby(\"color\") -%}\n#### {{colorValueToName(color)}}\n\n{% for annot in annots -%}\n> [!quote{% if annot.color %}|{{annot.color}}{% endif %}] {{calloutHeader(annot.type)}}\n{%- if annot.annotatedText %}\n> {{annot.annotatedText | nl2br}}\n{%- endif -%}\n{%- if annot.imageRelativePath %}\n> ![[{{annot.imageRelativePath}}]]\n{%- endif %}\n{%- if annot.ocrText %}\n> {{annot.ocrText}}\n{%- endif %}\n{%- if annot.comment %}\n>\n>> {{annot.comment | nl2br}}\n{%- endif %}\n>\n> [Page {{annot.page}}](zotero://open-pdf/library/items/{{annot.attachment.itemKey}}?page={{annot.page}}) [[{{annot.date | format(\"YYYY-MM-DD#h:mm a\")}}]]\n\n{% endfor -%}\n{% endfor -%}\n{% endif %}\n{% endpersist %}\n```\n\n</details>\n:::\n:::\n\n### My CSS Snippet\n\nFor the correct formatting, you need to include a <a class='glossary' title='Cascading Style Sheets (CSS) is a style sheet language used for specifying the presentation and styling of a document written in a markup language such as HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript. CSS is designed to enable the separation of content and presentation, including layout, colors, and fonts. (Wikipedia)'>CSS</a>\nsnippet into Obsidian. Take the code below and paste it into your .css\nfile following the procedure description of Obsidian [CSS\nsnippets](https://help.obsidian.md/Extending+Obsidian/CSS+snippets).\n\n::: my-r-code\n::: my-r-code-header\nMy personal example of a CSS code to format the output of the template\n:::\n\n::: my-r-code-container\n<details>\n\n<summary>My CSS Code to Copy</summary>\n\nHover the gray field to see the copy button at the top right.\n\n``` default\n/* \n\nZotero Integration Plugin\nStyling the template for Zotero Literature Notes\n\n*/\n\n\n/* Yellow */\n.literature-note .callout[data-callout-metadata=\"#ffd400\"] {\n  --callout-color: 255,212,0;\n}\n\n/* Red */\n.literature-note .callout[data-callout-metadata=\"#ff6666\"] {\n  --callout-color: 255,102,102;\n}\n\n/* Orange */\n.literature-note .callout[data-callout-metadata=\"#f19837\"] {\n  --callout-color: 241,152,55;\n}\n\n/* Green */\n.literature-note .callout[data-callout-metadata=\"#5fb236\"] {\n  --callout-color: 95,178,54;\n}\n\n/* Blue */\n.literature-note .callout[data-callout-metadata=\"#2ea8e5\"] {\n  --callout-color: 46,168,229;\n}\n\n/* Magenta */\n.literature-note .callout[data-callout-metadata=\"#e56eee\"] {\n  --callout-color: 229,110,238;\n}\n\n/* Purple */\n.literature-note .callout[data-callout-metadata=\"#a28ae5\"] {\n  --callout-color: 191,127,191;\n}\n\n/* Grey */\n.literature-note .callout[data-callout-metadata=\"#aaaaaa\"] {\n  --callout-color: 170,170,170;\n}\n```\n\n</details>\n:::\n:::\n\n### Result of my template\n\n![Part of my Zotero Integration template for creating literature\nnotes.](advanced-zotero-integration-template-example-min.png){#fig-zotero-template-example\nfig-alt=\"The screenshot shows a part of an Obsidian document in dark mode with a colored header. It starts with two yellow title headers, 'Highlights by Sequence…' and 'Sorted by Colors,' followed by three smaller green headers, 'Running text (Yellow) …', 'Concept, Definition Important (Red) …', and 'ToDo (Orange)'. What follows are quote admonitions (callouts) titled 'Highlight' in orange with a blue text paragraph and a red link to the page of the annotated document. The third of the four 'highlights' has the cursor in it and shows, therefore, the markdown code of this part of the Obsidian file.\"\nfig-align=\"center\" width=\"70%\" group=\"zotero-integration\"}\n\nMy template consists of four main parts:\n\n-   **1. Metadata**: This includes the YAML header, the abstract, and\n    other important information (title, cite key, bibliography, tags).\n-   **2. Highlights by sequence**: All annotations are sorted by their\n    position in the document.\n-   **3. Highlights by color**: Annotations sorted by their meaning.\n    This requires a correspondence between color and purpose/reference\n    type of the annotation.\n-   **4. Updates**: Changes after the first import are added at the end\n    of the Obsidian file. To get a file without updates, change the\n    folder position of the file, rename the original file, or delete it.\n\nI am planning to improve this template in two ways:\n\n1.  Only one admonition (callout) block for every color should exist.\n2.  Integrating the text of my green (H3) headers into the title of the\n    admonition (callout) block.\n\n## Conclusion\n\nWith the annotation tutorial, I have demonstrated a modern technology\nsupported annotation strategy. Every one of the three parts of the\ntutorial emphasizes one crucial aspect of this strategy:\n\n1.  Creating annotation with Zotero in <a class='glossary' title='A probability density function (PDF) describes a probability distribution for a random, continuous variable. Use a probability density function to find the chances that the value of a random variable will occur within a range of values that you specify. More specifically, a PDF is a function where its integral for an interval provides the probability of a value occurring in that interval. (Statistics By Jim)'>PDFs</a>,\n    <a class='glossary' title='EPUB (auch ePUB, Akronym für electronic publication) ist ein offener Standard für E-Books, documents and other digital resources.'>ePUB</a>-eBooks or website snapshots.\n2.  Installing two <a class='glossary' title='A plug-in (or plugin, add-in, addin, add-on, or addon) is a software component that adds a specific feature to an existing computer program. (Wikipedia)'>plugins</a> to build a bridge\n    between Zotero and Obsidian to import notes created with Zotero from\n    the annotated document.\n3.  Scraping annotations directly from the original document and redact\n    them in a way to optimize further work in the note-taking app\n    Obsidian.\n\n###### Glossary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> CSS </td>\n   <td style=\"text-align:left;\"> Cascading Style Sheets (CSS) is a style sheet language used for specifying the presentation and styling of a document written in a markup language such as HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript. CSS is designed to enable the separation of content and presentation, including layout, colors, and fonts. (&lt;a href=\"https://en.wikipedia.org/wiki/CSS\"&gt;Wikipedia&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> EPUB </td>\n   <td style=\"text-align:left;\"> EPUB (auch ePUB, Akronym für electronic publication) ist ein offener Standard für E-Books, documents and other digital resources. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> JPG </td>\n   <td style=\"text-align:left;\"> JPEG (/ˈdʒeɪpɛɡ/ JAY-peg, short for Joint Photographic Experts Group is a commonly used method of lossy compression for digital images. [(Wikipedia](https://en.wikipedia.org/wiki/JPEG)) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Metadata </td>\n   <td style=\"text-align:left;\"> Metadata (or metainformation) is \"data that provides information about other data\" ([Merriam-Webster](https://www.merriam-webster.com/dictionary/metadata)), but not the content of the data itself, such as the text of a message or the image itself. ([Wikipedia](https://en.wikipedia.org/wiki/Metadata)) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PDF </td>\n   <td style=\"text-align:left;\"> A probability density function (PDF) describes a probability distribution for a random, continuous variable. Use a probability density function to find the chances that the value of a random variable will occur within a range of values that you specify. More specifically, a PDF is a function where its integral for an interval provides the probability of a value occurring in that interval. (&lt;a href=\"https://statisticsbyjim.com/probability/probability-density-function/\"&gt;Statistics By Jim&lt;/a&gt;) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Plugin </td>\n   <td style=\"text-align:left;\"> A plug-in (or plugin, add-in, addin, add-on, or addon) is a software component that adds a specific feature to an existing computer program. ([Wikipedia](https://en.wikipedia.org/wiki/Plug-in_%28computing%29)) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PNG </td>\n   <td style=\"text-align:left;\"> Portable Network Graphic (PNG) is a non-patented raster graphics file format that supports lossless data compression. The format was not designed for professional-quality print graphics but for transferring images on the Internet (hence the name 'portable'). (Wikipedia) </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}