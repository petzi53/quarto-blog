[
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Send me a message!\n\n  \n    Your Name: \n  \n  \n    Your Email: \n  \n  \n    \n      Don’t fill this out if you’re human: \n    \n  \n  \n    Message:    \n  \n  \n    Send\n  \n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/2023-05-05-how-to-delete-git-branches/index.html",
    "href": "posts/2023-05-05-how-to-delete-git-branches/index.html",
    "title": "How to delete Git branches",
    "section": "",
    "text": "As I am not very experienced with R and coding, my knowledge of using Git and GitHub is limited. Usually, I use the pr_*() family of usethis functions as pull request helpers. They work very well – as long as the workflow follows the standard (successful) workflow:\nInitiate the pull request with pr_init(&lt;branch name&gt;) Submit the changes in the new branch with pr_push(). Click the “Create pull request”-button to make the PR. After the code is accepted and merged, conclude the process with pr_finish(). This sequence does not fly if the workflow deviates from the above model. The mentioned article describes the scenario of a discussion between contributor and reviewer that finally results in the acceptance of the PR. But what about a rejection of the PR?"
  },
  {
    "objectID": "posts/2023-05-05-how-to-delete-git-branches/index.html#if-a-pull-request-is-not-accepted",
    "href": "posts/2023-05-05-how-to-delete-git-branches/index.html#if-a-pull-request-is-not-accepted",
    "title": "How to delete Git branches",
    "section": "",
    "text": "As I am not very experienced with R and coding, my knowledge of using Git and GitHub is limited. Usually, I use the pr_*() family of usethis functions as pull request helpers. They work very well – as long as the workflow follows the standard (successful) workflow:\nInitiate the pull request with pr_init(&lt;branch name&gt;) Submit the changes in the new branch with pr_push(). Click the “Create pull request”-button to make the PR. After the code is accepted and merged, conclude the process with pr_finish(). This sequence does not fly if the workflow deviates from the above model. The mentioned article describes the scenario of a discussion between contributor and reviewer that finally results in the acceptance of the PR. But what about a rejection of the PR?"
  },
  {
    "objectID": "posts/2023-05-05-how-to-delete-git-branches/index.html#deletion-of-the-remote-branch-with-github-is-not-enough",
    "href": "posts/2023-05-05-how-to-delete-git-branches/index.html#deletion-of-the-remote-branch-with-github-is-not-enough",
    "title": "How to delete Git branches",
    "section": "… deletion of the remote branch with GitHub is not enough",
    "text": "… deletion of the remote branch with GitHub is not enough\nThis situation happened to me after I proposed fixing a typo for a repo that had been frozen because of a necessary general overhaul. I thought to delete the submitted remote branch at the GitHub site would bring me back to my initial position.\n\n\n\nScreenshot 1: Delete obsolete branch “typo” at GitHub site (simulated for this article).\n\n\nBut back in RStudio, it turned out that the deleted branch was still there.\n\n\n\nScreenshot 2: Local and Remote branches seen in RStudio\n\n\nOk, I understood that my remote action did not delete the local branch too. But why was the remote branch still there? After all, I had it just removed. (I double-checked the deletion, and the remote branch at the remote GitHub site was, in fact, completely gone."
  },
  {
    "objectID": "posts/2023-05-05-how-to-delete-git-branches/index.html#there-are-three-not-two-branches",
    "href": "posts/2023-05-05-how-to-delete-git-branches/index.html#there-are-three-not-two-branches",
    "title": "How to delete Git branches",
    "section": "There are three, not two branches",
    "text": "There are three, not two branches\nAfter some research, I found an answer at StackOverflow with over 25.000 views! It seems that I am not the only one surprised by the situation.\nAfter reading this and other answers at SO, I learned that there are three different branches:\n\nWhen you’re dealing with deleting branches both locally and remotely, keep in mind that there are three different branches involved: The local branch X. The remote origin branch X. The local remote-tracking branch origin/X that tracks the remote branch X. I deleted the remote origin branch X manually at the GitHub site. The local branch but also the local remote-tracking branch were still functional!\n\nFor every one of these three branches, one needs different commands to delete them. And here – as far as I understood – we have met the limits of RStudio and/or {usethis.} For the following commands, you have to change from the console to the terminal."
  },
  {
    "objectID": "posts/2023-05-05-how-to-delete-git-branches/index.html#useful-commands-for-deleting-branches",
    "href": "posts/2023-05-05-how-to-delete-git-branches/index.html#useful-commands-for-deleting-branches",
    "title": "How to delete Git branches",
    "section": "Useful commands for deleting branches",
    "text": "Useful commands for deleting branches\n\nDeleting a remote branch\ngit push origin -d &lt;branch&gt;\n\n\nDeleting a local branch\ngit checkout master # change branch, you can't delete a branch you are working on\ngit branch -d &lt;branch&gt;\ngit branch -D &lt;branch&gt; # Force-delete un-merged branches\n\n\nDeleting a local remote-tracking branch\n# 'dr' stands for \"delete remotes\"\ngit branch -dr &lt;remote&gt;/&lt;branch&gt;\ngit branch -dr origin/dev # example\n\n# Delete multiple obsolete remote-tracking branches\ngit fetch &lt;remote&gt; -p  # 'p' stands for \"prune\"\ngit fetch origin -p    # example\n\n\n\n\n\n\nNote\n\n\n\nDon’t forget to refresh the RStudio listing to verify that you have deleted the branches.\n\n\n\n\n\n\n\n\n\n\nClick on the circle symbol at the top right corner…\n\n\n\n\n\n\n… and choose “Refresh Now” to list the branches currently available."
  },
  {
    "objectID": "posts/2023-04-23-welcome-quarto/index.html",
    "href": "posts/2023-04-23-welcome-quarto/index.html",
    "title": "Bye, Bye Hugo, Welcome Quarto!",
    "section": "",
    "text": "This is the front cover for the CD “Coming Home” by the artist “New Found Glory” via Wikipedia (Fair Use)"
  },
  {
    "objectID": "posts/2023-04-23-welcome-quarto/index.html#my-first-blog-entry-with-quarto",
    "href": "posts/2023-04-23-welcome-quarto/index.html#my-first-blog-entry-with-quarto",
    "title": "Bye, Bye Hugo, Welcome Quarto!",
    "section": "My first blog entry with Quarto",
    "text": "My first blog entry with Quarto\nThis is my first entry in a new blog powered by Quarto. After continuously struggling with the complex machinery blogdown - Hugo - Wowchemy, I feel like coming home from a trip abroad!\nFollowing the Quarto guide Creating a Blog, it took me only 2 (!) minutes to render the provided blog template locally. After just one hour, I had my blog using Quarto, GitHub, and Netlify online. And half of this time, I spent thinking about a name for my blog and what to do with my older and outdated other blogdown web presences. (To put this quick access into perspective: I already had a GitHub account, GitHub credential, and a Netlify account. And I didn’t work on the content of a blog entry but used just the installed test pages.)\nI never was happy with the rapid development of Hugo that brought with it many changes and a considerable learning overhead. The same problem happened with the Academic theme by Wowchemy. The end product looked nice and ran fast, but I had already forgotten some of the many details for a good-looking blog post after two weeks. As a result, I spent more time learning the blog machinery than I had time to write about substantive subjects.\nIt was helpful when Yihui Xie introduced `blogdown::checksite()` and the possibility of freezing to a specific Hugo version. But the work in the blogdown-Hugo environment was never intuitive and satisfying. I think it’s self-explanatory that the introductory message to the blogdown book for over two years now states as a note from the authors: “Some of the information and instructions in this book are now out of date because of changes to Hugo and the blogdown package.”"
  },
  {
    "objectID": "posts/2023-04-23-welcome-quarto/index.html#future-plans",
    "href": "posts/2023-04-23-welcome-quarto/index.html#future-plans",
    "title": "Bye, Bye Hugo, Welcome Quarto!",
    "section": "Future plans",
    "text": "Future plans\nI am sure there will also be some intricacies I must learn and overcome with Quarto, but this will conform with all my other R knowledge. At the moment, my feeling is enthusiastic: It is easy and intuitive to write on this platform. I hope to overcome technical barriers and concentrate on thematic topics finally. Since English is not my mother tongue, it is already difficult enough to express myself precisely about complex content-related questions. I don’t need any additional technical difficulty in writing blog posts.\nIn contrast to my previous website projects, I am planning two different strategies: \n\nI will not go into the details of the website design immediately but will work on these issues from time to time.\nI will not announce the website until I am sure I will use it regularly and long-term. I think that about 10 articles – written in two months – should give me the trust that I will use it sustainably."
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html",
    "title": "Creating a column-based layout",
    "section": "",
    "text": "From PxHere (CC0, Public Domain)\nIn my first two articles, I encountered the problem of changing the page layout several times: So I wanted – for instance – in my article How to delete Git branches two small screenshots to appear side by side."
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html#help-page-about-article-layout",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html#help-page-about-article-layout",
    "title": "Creating a column-based layout",
    "section": "Help page about article layout",
    "text": "Help page about article layout\nWhen I looked at the Quarto help pages, I found a chapter about article layouts. But it treated the layout of pages in a more general way by answering the following questions:\n\nHow to use the whole main content region?\nHow can content overflow this standard content region?\nHow can one span the width of the entire page?\nHow can authors place content on the document margin?\n\nI think that these questions address pretty special requirements. I just wanted a solution for content items side by side. This support page about the article layout was not helpful to me."
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html#using-a-table-failed",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html#using-a-table-failed",
    "title": "Creating a column-based layout",
    "section": "Using a table failed",
    "text": "Using a table failed\nMy first approach was to use a table to position images side by side. I created a one-row / two-column table with the visual editor of RStudio and uploaded in each column a picture. But the screenshots didn’t appear. Whenever I rendered the page, Quarto told me, “404: Not Found”.\n\n\n\nLooking after rendering into the tab “Background Jobs” revealed these error messages\n\n\nAs I inspected the source code, I saw the reason: The long image URLs didn’t fit in the table column, and therefore forced line breaks that destroyed the URLs.\n\n\n\nSource code generated by RStudio after loading two images into a one-row / two-columns desing"
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html#using-pandoc-extensions",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html#using-pandoc-extensions",
    "title": "Creating a column-based layout",
    "section": "Using pandoc extensions",
    "text": "Using pandoc extensions\nAfter long research, I found three answers to my question via StackOverflow. They all used the fenced_divs extension of pandoc.\nIt is easier to explain the method after I have presented these three examples. I will use the same toy text sample for the following illustration.\nText in the left column:\n\nI would like to have text here\n\n\nSentence becomes longer, it should automatically stay in their column\n\nText in the right column:\n\nand here\n\n\nMore text\n\n\nExample 1: Two columns separated by a small third column\n---\ntitle: \"Two columns separated by a small third column\"\nformat: html\nengine: knitr\n---\n\n:::: {.columns}\n\n::: {.column width=\"70%\"}\nI would like to have text here\n\nSentence becomes longer, it should automatically stay in their column\n:::\n\n::: {.column width=\"10%\"}\n&lt;!-- empty column to create gap --&gt;\n:::\n\n::: {.column width=\"20%\"}\nand here\n\nMore text\n:::\n\n::::\nThe example is — slightly redacted — taken from shafee via StackOverflow\n\n\nExample 2: Two columns using the bootstrap CSS grid system\n---\ntitle: \"Two columns using the bootstrap CSS grid system\"\nformat: html\nengine: knitr\n---\n  \n  \n::: {.grid}\n\n::: {.g-col-6}\n\n## First column \nI would like to have text here\n\nSentence becomes longer, it should automatically stay in their column\n:::\n  \n::: {.g-col-6}\n\n## Second column \n\nand here\n\nMore text\n\n:::\n  \n:::\nThe example is — slightly redacted — taken from Julian via StackOverflow.\n\n\nExample 3: Two columns with text center-aligned\n---\ntitle: \"Two columns with text center-aligned\"\nformat: html\nengine: knitr\n---\n    \n\n\n\n::: {.cell}\n&lt;style type=\"text/css\"&gt;\n.column {\ntext-align: center;\n}\n&lt;/style&gt;\n:::\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\nI would like to have text here\n\nSentence becomes longer, it should automatically stay in their column\n:::\n\n::: {.column width=\"50%\"}\n\nand here\n\nMore text\n:::\n\n::::\nThe example is — slightly redacted — taken again from shafee via StackOverflow."
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html#fenced-divs-in-pandoc-how-do-they-work",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html#fenced-divs-in-pandoc-how-do-they-work",
    "title": "Creating a column-based layout",
    "section": "Fenced divs in Pandoc: How do they work?",
    "text": "Fenced divs in Pandoc: How do they work?\n\nWhat is Pandoc?\nPandoc is an open-source universal document converter. Pandoc is licensed with the very permissive GNU1 General Public License (GPL). Currently, Pandoc supports the conversion of more than 60 formats. John MacFarlane, a philosophy professor at the University of Berkeley, is developing and maintaining Pandoc.\nRStudio IDE ships with a pandoc binary. The path is stored in the RSTUDIO_PANDOC environment variable. You can get the path and the current pandoc version used by RStudio with rmarkdown::find_pandoc().\n\nrmarkdown::find_pandoc()\n\n$version\n[1] '3.1.2'\n\n$dir\n[1] \"/usr/local/bin\"\n\n\nTo get the version number on your machine type in the terminal:\npandoc --version\n(base) path@my_machine quarto-blog % pandoc --version\npandoc 3.1.2\nFeatures: +server +lua\nScripting engine: Lua 5.4\nUser data directory: /Users/petzi/.pandoc\nCopyright (C) 2006-2023 John MacFarlane. Web:  https://pandoc.org\nThis is free software; see the source for copying conditions. There is no\nwarranty, not even for merchantability or fitness for a particular purpose.\n(base) path@my_machine quarto-blog % \nThis result shows I have two different pandoc versions installed — a potential danger for a version conflict: One version installed RStudio, and the other I downloaded with the macOS package manager Homebrew.\n\n\nDiv Blocks in Pandoc\nThe pandoc div extension allows a special fenced syntax to generate HTML div-tags:\n\nA div starts with a fence containing at least three consecutive colons plus some attributes. The attributes may optionally be followed by another string of consecutive colons. … [O]ne can use either attributes in curly braces or a single unbraced word, which will be treated as a class name. The Div ends with another line containing a string of at least three consecutive colons. The fenced Div should be separated by blank lines from preceding and following blocks. From Extension: fenced_divs\n\nTwo more remarks:\n\nIf you are going to nest pandoc div directives, you must provide more colons for the outer divs than the inner divs.\nTo prevent that Quarto uses the jupyter engine, you must provide engine: knitr in the YAML front matter."
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html#a-genuine-quarto-solution",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html#a-genuine-quarto-solution",
    "title": "Creating a column-based layout",
    "section": "A genuine Quarto solution",
    "text": "A genuine Quarto solution\nAfter I looked around at how to create a two-text column layout for a while, I found a simple Quarto answer. Hidden in the help page about figures, I found the remark:\n\nYou can treat any markdown content you want as a figure by enclosing it in Pandoc div block with an identifier prefaced with #fig-. See the first sentence under the header Figure Divs.\n\nThe first part of the sentence, “You can treat any markdown content you want as a figure…” could be reversed to the concept that a layout for figures works similarly to a design for text.\nI came up with the following solution that I also published to answer the StackOverflow post.\n\nVersion 1 with equally wide columns\n\n---\ntitle: \"Two columns layout Quarto with equally wide columns\"\nformat: html\nengine: knitr\n---\n\n::: {layout-ncol=2}\n\n\nFirst column\n\nSecond column\n\nI would like to have text here\n\nand here\n\nSentence becomes longer, it should automatically stay in their column\n\nMore text\n\n:::\nThe above solution uses the Quarto layout-ncol attribute. There is also a layout-nrowattribute. In both directives, you can specify the number of columns respectively rows.\n\n\nVersion 2 with different wide columns\n---\ntitle: \"Two columns layout Quarto with different wide columns\"\nformat: html\nengine: knitr\n---\n\n::: {layout=\"[[10,5], [40,20], [26,13], [2,1]]\"}\n\n\n**First column**\n\n**Second column**\n\nI would like to have text here\n\nand here\n\nSentence becomes longer, it should automatically stay in their column\n\nMore text\n\n:::\nThe version 2 solution uses the general form of the layout attribute. It is followed by a 2-dimensional array where the first dimension defines rows and the second columns. Note that the used row / column numbers in the second version are arbitrary. They just provide the desired proportion of 2:1. The code translates to “create four rows, where the first column has always the double size of the second column.”\nSome final remarks on both of the last examples:\n\nThere needs to be an empty line between every paragraph (here sentence). This structure is necessary so Pandoc can see the break and addresses the next column.\nYou need to use the engine: knitr command to prevent rendering with the jupyter engine."
  },
  {
    "objectID": "posts/2023-05-07-creating-a-column-based-layout/index.html#conclusion",
    "href": "posts/2023-05-07-creating-a-column-based-layout/index.html#conclusion",
    "title": "Creating a column-based layout",
    "section": "Conclusion",
    "text": "Conclusion\nThere are many possibilities for a creative layout design in Quarto. This article shows the use of Pandocs div block directives with five different methods. These layout directives can be generalized from a two-column to a many column layout\n\nSeveral columns with varying percentages of widths.\nSeveral columns using the very flexible bootstrap CSS grid system.\nSeveral columns with formatted explicitly with a CSS style.\nSeveral columns with the same width using the Quarto layout-ncol or layout-nrow attribute.\nSeveral columns with different widths using the Quarto general layout attribute."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "L3Lab",
    "section": "",
    "text": "Creating a column-based layout\n\n\nChanging the Page Layout in Quarto\n\n\n\n\nblog\n\n\nquarto\n\n\nhow-to\n\n\n\n\nDo you want to place two figures side by side or write text in parallel in different columns? The post describes four methods to turn part of your blog post into a column-based layout.\n\n\n\n\n\n\n2023-05-07\n\n\nPeter Baumgartner\n\n\n2023-05-09\n\n\n\n\n\n\n  \n\n\n\n\nHow to delete Git branches\n\n\nThe limits of RStudio and of the pr_*() family of {usethis} functions\n\n\n\n\ngit\n\n\ngithub\n\n\nhow-to\n\n\n\n\nThe article explains how I finally succeeded in deleting different branches in Git. It turned out – contrary to my previous mental model – that there are not only two branches but three (local, remote origin, and local remote-tracking branch).\n\n\n\n\n\n\n2023-05-05\n\n\nPeter Baumgartner\n\n\n2023-05-09\n\n\n\n\n\n\n  \n\n\n\n\nBye, Bye Hugo, Welcome Quarto!\n\n\nMy first blogging impressions with Quarto\n\n\n\n\nblog\n\n\nquarto\n\n\n\n\nThis is my first entry in a new blog powered by Quarto. After continuously struggling with the complex machinery (blogdown, Hugo, Wowchemy), I feel like coming home from a trip abroad!\n\n\n\n\n\n\n2023-04-23\n\n\nPeter Baumgartner\n\n\n2023-05-04\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Peter Baumgartner",
    "section": "",
    "text": "I am a retired professor of Education Technology. As head of the Department of Interactive Media and Educational Technologies at the University for Continuing Education Krems (UWK) (Austria), I researched how to apply technology in settings of Life Long Learning. \nI had held positions as a professor at several universities in Austria and Germany (Klagenfurt, Münster, Innsbruck, Hagen) before I accepted the nomination to Krems. I published 25 books (10 monographs and 15 edited volumes) and over 200 articles.\nWith my retirement, I became a Life Long Learner myself. I am interested in studying workflows for Open Science research, focusing on note-taking apps like Obsidian, Hypothes.is, etc., and the R programming language for statistical computing and data science.\n\n\n Back to top"
  },
  {
    "objectID": "presence.html",
    "href": "presence.html",
    "title": "Life Long Learning Lab",
    "section": "",
    "text": "ORCID LogoMy unique researcher ID = 0000-0003-4526-8791. Read my article: What is an ORCID ID?\nDict.cc IconUse my Croatian-German flashcards in dict.cc, a multilingual dictionary driven and maintained by the community.\nDiigo LogoSee and share booksmarks with me in Diigo, a social bookmarking website, especially suited as a digital research tool.\nDownload IconDownload my publications from Educational Patterns, a website I abandoned August 2018 for reasons explained here in the blue box.\nGithub iconMy repositories on GitHub, a Git repository hosting service.\nWordpress LogoVisit my German Wordpress blog Gedankensplitter and read about eLearning and educational technology.\nGoodreads LogoTrack the books I read and read my reviews on Goodreads, the largest site for readers and book recommendations.\nGoogle Scholar IconMy Page on Google Scholar, a freely accessible web search engine that indexes scholarly literature.\nPrezi LogoLook, download and edit my Prezi presentations, about half of them im English and some with German audit track.\nRStudio LogoRead and comment my R Markdown documents written in RStudio und published via RPubs.\nSkype LogoContact me via Skype.\nStack Overflow IconMy profile on StackOverflow, the world’s largest developer community.\nWakelet IconNew IconCapture, organize and share multi-media resources with me. Visit my curated links on my Wakelet Home Page.\nPublication IconRead my book Studieren und Forschen mit dem Internet on the Internet or as PDF, ePub or in mobi format.\nTwitter IconFollow me on Twitter, a social networking site for micro-blogging.\nZotero LogoVisit and follow me on Zotero, a citation management systems to collect, organize and share citations.\n\n\n\n Back to top"
  }
]